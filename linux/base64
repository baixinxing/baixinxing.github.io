<h1 id="base64">base64</h1>
<h4 id="-">手册</h4>
<pre class="editor-colors"><code>用法 base64 [选项]... [文件]

使用 Base64 编码/解码文件或标准输入输出。

选项
  -d, --decode          解码数据
  -i, --ignore-garbag   解码时忽略非字母字符
  -w, --wrap=字符数     在指定的字符数后自动换行(默认为76)，0 为禁用自动换行

      --help            显示此帮助信息并退出
      --version         显示版本信息并退出

如果没有指定文件，或者文件为"-"，则从标准输入读取。
</code></pre><h4 id="-">例子</h4>
<pre class="editor-colors"><code class="lang-bash"><div>&nbsp;</div><div><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>输出aGVsbG8gd29yZAo=</span></span></div><div><span class="source shell">base64 <span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>回车</span></span></div><div><span class="source shell">hello word <span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>回车</span></span></div><div><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>ctrl+d</span></span></div><div>&nbsp;</div><div><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>输出hello word</span></span></div><div><span class="source shell">base64 -d <span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>回车</span></span></div><div><span class="source shell">aGVsbG8gd29yZAo= <span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>回车</span></span></div><div><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>ctrl+d</span></span></div><div>&nbsp;</div><div><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>输出aGVsbG8gd29yZAo=</span></span></div><div><span class="source shell"><span class="support function builtin shell">echo</span> hello word<span class="keyword operator pipe shell">|</span>base64</span></div><div>&nbsp;</div><div><span class="source shell"><span class="comment line number-sign shell"><span class="punctuation definition comment shell">#</span>输出hello word</span></span></div><div><span class="source shell"><span class="support function builtin shell">echo</span> aGVsbG8gd29yZAo=<span class="keyword operator pipe shell">|</span>base64 -d</span></div></code></pre>
<h4 id="-">算法流程</h4>
<ul>
<li><h5 id="64-">64个字符</h5>
</li>
</ul>
<pre class="editor-colors"><code class="lang-base64">　　0　A　　17　R　　　34　i　　　51　z

　　1　B　　18　S　　　35　j　　　52　0

　　2　C　　19　T　　　36　k　　　53　1

　　3　D　　20　U　　　37　l　　　54　2

　　4　E　　21　V　　　38　m　　　55　3

　　5　F　　22　W　　　39　n　　　56　4

　　6　G　　23　X　　　40　o　　　57　5

　　7　H　　24　Y　　　41　p　　　58　6

　　8　I　　　25　Z　　　42　q　　　59　7

　　9　J　　26　a　　　43　r　　　60　8

　　10　K　　27　b　　　44　s　　　61　9

　　11　L　　28　c　　　45　t　　　62　+

　　12　M　　29　d　　　46　u　　　63　/

　　13　N　　30　e　　　47　v

　　14　O　　31　f　　　48　w　　　

　　15　P　　32　g　　　49　x

　　16　Q　　33　h　　　50　y
</code></pre>
<ul>
<li><h5 id="1-">1字节解码算法</h5>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">字节数</th>
<th style="text-align:left">1字节</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">字符</td>
<td style="text-align:left">A</td>
</tr>
<tr>
<td style="text-align:left">二进制</td>
<td style="text-align:left">01000001</td>
</tr>
<tr>
<td style="text-align:left">末尾补4个0</td>
<td style="text-align:left">01000001 0000</td>
</tr>
<tr>
<td style="text-align:left">6个算一个字节</td>
<td style="text-align:left">010000 010000</td>
</tr>
<tr>
<td style="text-align:left">十进制</td>
<td style="text-align:left">16 16</td>
</tr>
<tr>
<td style="text-align:left">匹配64个字符</td>
<td style="text-align:left">Q Q</td>
</tr>
<tr>
<td style="text-align:left">结果</td>
<td style="text-align:left">QQ==</td>
</tr>
</tbody>
</table>
<ul>
<li><h5 id="2-">2字节解码算法</h5>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">字节数</th>
<th style="text-align:left">2字节</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">字符</td>
<td style="text-align:left">BC</td>
</tr>
<tr>
<td style="text-align:left">二进制</td>
<td style="text-align:left">01000010 01000011</td>
</tr>
<tr>
<td style="text-align:left">末尾补2个0</td>
<td style="text-align:left">01000010 01000011 00</td>
</tr>
<tr>
<td style="text-align:left">6个算一个字节</td>
<td style="text-align:left">010000 100100 001100</td>
</tr>
<tr>
<td style="text-align:left">十进制</td>
<td style="text-align:left">16 36 12</td>
</tr>
<tr>
<td style="text-align:left">匹配64个字符</td>
<td style="text-align:left">QkM</td>
</tr>
<tr>
<td style="text-align:left">结果</td>
<td style="text-align:left">QkM=</td>
</tr>
</tbody>
</table>
<ul>
<li><h5 id="3-">3字节解码算法</h5>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">字节数</th>
<th style="text-align:left">3字节</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">字符</td>
<td style="text-align:left">Man</td>
</tr>
<tr>
<td style="text-align:left">二进制</td>
<td style="text-align:left">010011010110000101101110</td>
</tr>
<tr>
<td style="text-align:left">末尾不补0</td>
<td style="text-align:left">010011010110000101101110</td>
</tr>
<tr>
<td style="text-align:left">6个算一个字节</td>
<td style="text-align:left">010011 010110 000101 101110</td>
</tr>
<tr>
<td style="text-align:left">十进制</td>
<td style="text-align:left">19 22 5 46</td>
</tr>
<tr>
<td style="text-align:left">匹配64个字符</td>
<td style="text-align:left">T W F u</td>
</tr>
<tr>
<td style="text-align:left">结果</td>
<td style="text-align:left">TWFu</td>
</tr>
</tbody>
</table>
<h4 id="php-">PHP模拟实现</h4>
<pre class="editor-colors"><code class="lang-php"><div><span class="text html php"><span class="meta embedded block php"><span class="punctuation section embedded begin php">&lt;?php</span></span></span></div><div><span class="text html php"><span class="meta embedded block php"><span class="source php"><span class="punctuation whitespace comment leading php">  </span><span class="comment line double-slash php"><span class="punctuation definition comment php">//</span>模拟实现base64加密</span></span></span></span></div><div><span class="text html php"><span class="meta embedded block php"><span class="source php">  <span class="variable other php"><span class="punctuation definition variable php">$</span>base64</span><span class="keyword operator assignment php">=</span><span class="string quoted single php"><span class="punctuation definition string begin php">'</span><span class="meta string-contents quoted single php">ABCDEFGHIGKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</span><span class="punctuation definition string end php">'</span></span><span class="punctuation terminator expression php">;</span></span></span></span></div><div>&nbsp;</div><div><span class="text html php"><span class="meta embedded block php"><span class="source php"><span class="punctuation whitespace comment leading php">  </span><span class="comment line double-slash php"><span class="punctuation definition comment php">//</span>1个字节测试</span></span></span></span></div><div><span class="text html php"><span class="meta embedded block php"><span class="source php"><span class="punctuation whitespace comment leading php">  </span><span class="comment line double-slash php"><span class="punctuation definition comment php">//</span>echo implode(array_map(function($v) use($base64){return $base64[bindec(str_pad($v,8,'0',STR_PAD_LEFT))];},str_split(sprintf("0%b",ord('a')).'0000',6)),'')."==\n";</span></span></span></span></div><div>&nbsp;</div><div><span class="text html php"><span class="meta embedded block php"><span class="source php"><span class="punctuation whitespace comment leading php">  </span><span class="comment line double-slash php"><span class="punctuation definition comment php">//</span>2个字节测试</span></span></span></span></div><div><span class="text html php"><span class="meta embedded block php"><span class="source php"><span class="punctuation whitespace comment leading php">  </span><span class="comment line double-slash php"><span class="punctuation definition comment php">//</span>echo implode(array_map(function($v) use($base64){ return $base64[bindec($v)];},str_split(implode(array_map(function($v){ return sprintf('0%b',ord($v)) ;},str_split('bc',1))).'00',6)),'')."=\n";</span></span></span></span></div><div>&nbsp;</div><div><span class="text html php"><span class="meta embedded block php"><span class="source php"><span class="punctuation whitespace comment leading php">  </span><span class="comment line double-slash php"><span class="punctuation definition comment php">//</span>3个字节测试</span></span></span></span></div><div><span class="text html php"><span class="meta embedded block php"><span class="source php">  <span class="support function construct php">echo</span> <span class="support function string php">implode</span>(<span class="support function array php">array_map</span>(<span class="meta function closure php"><span class="storage type function php">function</span><span class="punctuation definition parameters begin php">(</span><span class="meta function arguments php"><span class="meta function argument no-default php"><span class="variable other php"><span class="punctuation definition variable php">$</span>v</span></span></span><span class="punctuation definition parameters end php">)</span> <span class="keyword other function use php">use</span><span class="punctuation definition parameters begin php">(</span><span class="meta function closure use php"><span class="variable other php"><span class="punctuation definition variable php">$</span>base64</span></span><span class="punctuation definition parameters end php">)</span>{</span> <span class="keyword control php">return</span> <span class="variable other php"><span class="punctuation definition variable php">$</span>base64</span><span class="punctuation section array begin php">[</span><span class="support function math php">bindec</span>(<span class="variable other php"><span class="punctuation definition variable php">$</span>v</span>)<span class="punctuation section array end php">]</span><span class="punctuation terminator expression php">;</span> <span class="punctuation section scope end php">}</span>,<span class="support function string php">str_split</span>(<span class="support function string php">implode</span>(<span class="support function array php">array_map</span>(<span class="meta function closure php"><span class="storage type function php">function</span><span class="punctuation definition parameters begin php">(</span><span class="meta function arguments php"><span class="meta function argument no-default php"><span class="variable other php"><span class="punctuation definition variable php">$</span>v</span></span></span><span class="punctuation definition parameters end php">)</span>{</span> <span class="keyword control php">return</span> <span class="support function string php">sprintf</span>(<span class="string quoted single php"><span class="punctuation definition string begin php">'</span><span class="meta string-contents quoted single php">0%b</span><span class="punctuation definition string end php">'</span></span>,<span class="support function string php">ord</span>(<span class="variable other php"><span class="punctuation definition variable php">$</span>v</span>))<span class="punctuation terminator expression php">;</span> <span class="punctuation section scope end php">}</span>,<span class="support function string php">str_split</span>(<span class="string quoted single php"><span class="punctuation definition string begin php">'</span><span class="meta string-contents quoted single php">Man</span><span class="punctuation definition string end php">'</span></span>,<span class="constant numeric php">1</span>)),<span class="string quoted single php"><span class="punctuation definition string begin php">'</span><span class="punctuation definition string end php">'</span></span>),<span class="constant numeric php">6</span>)))<span class="keyword operator string php">.</span><span class="string quoted double php"><span class="punctuation definition string begin php">"</span><span class="meta string-contents quoted double php"><span class="constant character escape php">\n</span></span><span class="punctuation definition string end php">"</span></span><span class="punctuation terminator expression php">;</span></span></span></span></div><div><span class="text html php"><span class="meta embedded block php"><span class="punctuation section embedded end php"><span class="source php">?</span>&gt;</span></span><span class="punctuation whitespace embedded trailing php"></span></span></div></code></pre>
